"use strict";

stuff
({
	uses :
	 [
		'THREE : *, -Math'     ,
		'Math  : *, -Geometry' ,
		'Math.Geometry (N*)'   ,
		//'Math.Geometry'        ,
	 ],
	'UVS.Imaging.Routines' :
	 {
		'ImgDir' : "assets/images/",
		'VertexData' : 
		 {
			BuranPath88        :
			 {
				get once()
				{
					var oVV = []; for(var _EE = gApp.ApproachDiagram.VymData.Entries, cE,Ei = 0; cE = _EE[Ei], Ei < _EE.Length; Ei+=100)
					{
						//oVV.Add(cE.Value.Z, cE.Value.X, cE.Value.H);
						oVV.Add(cE.Value.Position.X, cE.Value.Position.Y, cE.Value.Position.Z);
					}
					return oVV;
				}
			 },
		 },
		'Drafting' : 
		 {
			Line          : function(iName, iColor, iWidth, iType, iPointVV, iPosV, iRotQ, iScaV, oObj$Line)
			 {
				if(!iPointVV || iPointVV.Length == 0 || iPointVV.Length % 3 != 0) throw "ARGS: invalid point data";

				if(iName  == undefined) iName  = "";
				if(iColor == undefined) iColor = "#ffff00";
				if(iWidth == undefined) iWidth = 2;
				if(iType  == undefined) iType  = LineStrip;
				if(iPosV  == undefined) iPosV  = new Vector3;
				if(iRotQ  == undefined) iRotQ  = new Quaternion;
				if(iScaV  == undefined) iScaV  = new Vector3(1,1,1);

				oObj = new Line(new Geometry(), new LineBasicMaterial({color : iColor, linewidth : iWidth}));
				{
					for(var cP,Vi = 0; cP = new Vector3(iPointVV[Vi], iPointVV[Vi + 1], iPointVV[Vi + 2]), Vi < iPointVV.Length; Vi += 3)
					{
						oObj.geometry.vertices.push(cP);
					}
					oObj.name       = iName;
					oObj.type       = iType;
					oObj.position   . copy(iPosV);
					oObj.quaternion . copy(iRotQ);
					oObj.scale      . copy(iScaV);
				}
				return oObj;
			 },
			Object        : function(iName, iType, iColor, iWidth,  iPosV, iRotQ, iScaV, oObj$Line)
			 {
				if(iType  == undefined) iType  = "Cross3D";


				var _VV = [], _LineT = LineStrip; switch(iType)
				{
					case "Cross2D"   : _LineT = LinePieces; _VV = [-1, 0,0, +1, 0,0,   0,-1,0,  0,+1,0];                             break;
					case "Cross3D"   : _LineT = LinePieces; _VV = [-1, 0,0, +1, 0,0,   0,-1,0,  0,+1,0,  0,0,-1, 0,0,+1];            break;
					case "XSign"     : _LineT = LinePieces; _VV = [-1,-1,0, +1,+1,0,  -1,+1,0, +1,-1,0];                             break;
					case "Rectangle" :                      _VV = [-1,-1,0, +1,-1,0,  +1,+1,0, -1,+1,0, -1,-1,0];                    break;
					case "Diamond"   :                      _VV = [-1, 0,0,  0,+1,0,  +1, 0,0,  0,-1,0, -1, 0,0];                    break;
					
					case "Circle"    : for(var _Step = 30 * DTR, cI = -_Step; cI < D360; cI += _Step) _VV.Add(Sin(cI), Cos(cI), 0);  break;
					case "Box"       :
					 {
						_LineT = LinePieces;

						_VV = 
						[
							-1,-1,-1, +1,-1,-1,
							+1,-1,-1, +1,+1,-1,
							+1,+1,-1, -1,+1,-1,
							-1,+1,-1, -1,-1,-1,

							-1,-1,+1, +1,-1,+1,
							+1,-1,+1, +1,+1,+1,
							+1,+1,+1, -1,+1,+1,
							-1,+1,+1, -1,-1,+1,

							-1,-1,-1, -1,-1,+1,
							+1,-1,-1, +1,-1,+1,
							+1,+1,-1, +1,+1,+1,
							-1,+1,-1, -1,+1,+1,
						];
						break;
					 }
					
					default : throw "WTF";
				}
				return new Drafting.Line(iName, iColor, iWidth, _LineT, _VV, iPosV, iRotQ, iScaV);
			 },
			
			Waypoint      : function(iX,iY,iZ, iRadius, iColor, oObj)
			 {
				
			 },
			NEP           : function(iX,iY,iZ, iRadius, iColor, oObj)
			 {
				return new Drafting.Object
				(
					"", "Circle", iColor, 3,
					new Vector3(iX,iY,iZ),
					NQuaternion.Rotated(D090,0,0).ToTHREE(),
					new Vector3(iRadius,iRadius,iRadius)
				);
			 },
		 },
		
		
		CreateSkydome       : function(iName, iFileName, iSize, iAlt, iRepeatX, iIsTransparent, oSphere)
		 {
			if(iSize    == undefined) iSize    = 50000;
			if(iRepeatX == undefined) iRepeatX = 1;

			oSphere = new Mesh(new SphereGeometry(iSize));
			{
				oSphere.name       = iName;
				oSphere.position.z = iAlt;
				oSphere.rotateX(D090);


				
				var _Texture = ImageUtils.loadTexture(ImgDir + iFileName);
				{
					//_Texture.wrapS = RepeatWrapping;
					//_Texture.wrapT = RepeatWrapping;

					//_Texture.repeat.set(1,1);
				}
				//new MeshBasicMaterial({transparent : iIsTransparent, side: BackSide}
				oSphere.material = new MeshBasicMaterial({map : _Texture, transparent : iIsTransparent, side: BackSide, fog : false});
			}
			return oSphere;
		 },
		CreateTerrain       : function(iFileN,  iWidth, iHeight,  iWidSegs, iHeiSegs, iX, iY, iAngZ, iUniqTiles, oObj)
		 {
			if(iWidSegs * iHeiSegs != iUniqTiles.Length) throw "WTF";

			//var _Te
			var _FileNameRgx = /(.*)(\..*?)$/;
			//var _GenericTile = ;
			

			oObj = new Mesh();
			{
				oObj.name = "Terrain";
				//oObj.rotateZ(1.15);
				oObj.rotateZ(iAngZ);
				oObj.position.set(iX, iY, -0.1);
				
				
				
				//var _AiptM = new Mesh();

				var _Geom = new PlaneGeometry(iWidth,iHeight,iWidSegs,iHeiSegs);
				{
					//debugger;
					for(var cMatI = 0, Ti = 0; Ti < iUniqTiles.length; Ti++)
					{
						if(!iUniqTiles[Ti]) continue;

						_Geom.faces[Ti * 2 + 0].materialIndex =
						_Geom.faces[Ti * 2 + 1].materialIndex = ++cMatI;
					}
					//for(var _Uvs = _Geom.faceVertexUvs[0], Si = 0; Si < iWidSegs * iHeiSegs * 2; Si += 2)
					//{
						//_Uvs[Si]     = [new Vector2(0,1),new Vector2(0,0),new Vector2(1,1)];
						//_Uvs[Si + 1] = [new Vector2(0,0),new Vector2(1,0),new Vector2(1,1)];
					//}
					//debugger;
					for(var _Uvs = _Geom.faceVertexUvs[0], Si = 0; Si < _Uvs.Length; Si += 2)
					{
						_Uvs[Si]     = [new Vector2(0,1),new Vector2(0,0),new Vector2(1,1)];
						_Uvs[Si + 1] = [new Vector2(0,0),new Vector2(1,0),new Vector2(1,1)];
					}
					
					for(var _VV = _Geom.vertices, cV, Vi = 0; cV = _VV[Vi]; Vi++)
					{
						cV.z = Random() * Max(0, cV.length() -  4000) * 0.02;
					}
					_Geom.computeFaceNormals();
					_Geom.computeVertexNormals();

					//_Geom.faceVertexUvs = []; for(var Si = 0; Si < Pow(iSegments, 2) * 2; Si += 2)
					//{
						//_Geom.faceVertexUvs.Add([new Vector2(0,0.1),new Vector2(0,0),new Vector2(0.1,0.1)]);
						//_Geom.faceVertexUvs.Add([new Vector2(0,0),new Vector2(0.1,0),new Vector2(0.1,0.1)]);
					//}

					//_Geom.buffersNeedUpdate = true;
					//console.info(_Geom);
				}
				


				var _MM = [];
				{
					//debugger;
					var _DiffC = 0xffffff;
					var _SpecC = 0x000000;
					var _EmisC = 0xaaaaaa;

					_MM.Add(new MeshLambertMaterial({map : ImageUtils.loadTexture(ImgDir + "terrain/" + iFileN.Replace(_FileNameRgx, "$1generic$2")), color : _DiffC, specular : _SpecC,  emissive : _EmisC}));
//new MeshLambertMaterial({map: cTileT, color : 0xffffff, specular : 0x555555,  emissive : 0xaaaaaa})

					for(var cX = 0; cX < iWidSegs; cX++) for(var cY = 0; cY < iHeiSegs; cY++) 
					{
						if(!iUniqTiles[(cY * iWidSegs) + cX]) continue;

						var cTileT = ImageUtils.loadTexture(ImgDir + "terrain/" + iFileN.Replace(_FileNameRgx, "$1" + cX + "x" + cY + "$2"));
						{
							//cTex.wrapS = RepeatWrapping;
							//cTex.wrapT = RepeatWrapping;

							//cTex.repeat.set(1,1);
						}
						_MM.Add(new MeshLambertMaterial({map: cTileT, color : _DiffC, specular : _SpecC,  emissive : _EmisC}));
						 
					}
				}
				//oObj.geometry = _Geom;
				oObj.geometry = _Geom;
				oObj.material = new MeshFaceMaterial(_MM);
				//debugger;

				//cio
			}
			return oObj;
		 },
		
		CreateLayer        : function(iName, iPos, iSize, iHNoise, iColor, iTexFileN, iTexRepeat$num, oObj)
		 {
			//debugger;
			//if(iHNoise)
			
			var _Texture; if(iTexFileN)
			{
				_Texture = ImageUtils.loadTexture(ImgDir + iTexFileN);
				{
					if(iTexRepeat != undefined)
					{
						_Texture.wrapS = RepeatWrapping;
						_Texture.wrapT = RepeatWrapping;

						_Texture.repeat.set(iTexRepeat,iTexRepeat);
					}
				}
			}

			oObj = new Mesh(new PlaneGeometry(1,1, iHNoise ? 100 : 1, iHNoise ? 100 : 1), new MeshBasicMaterial({map : _Texture, color : iColor, transparent: true, opacity : 1, side : DoubleSide}));
			{
				oObj.name = iName;
				oObj.position.copy(iPos);
				oObj.scale.set(iSize,iSize,1);


				if(iHNoise) for(var _VV = oObj.geometry.vertices, cV, Vi = 0; cV = _VV[Vi]; Vi++)
				{
					cV.z = Random() * iHNoise;
				}

				oObj.geometry.computeFaceNormals();
				oObj.geometry.computeVertexNormals();
			}
			return oObj;
		 },
	
		CreateRunway        : function(oObj)
		 {
			oObj = new Object3D();
			{
				oObj.add(Drafting.Object("", "Rectangle", 0xffffff, 3, null, null, new Vector3(84 / 2, 4500 / 2, 1)));
				oObj.add(Drafting.Object("", "Cross2D",   0xffff00, 1, null, null, new Vector3(35,2100,1)));
				
				oObj.add(Drafting.Object("", "Diamond", 0xffffff, 2, new Vector3(0,+1500,0), null, new Vector3(20,50,1)));
				oObj.add(Drafting.Object("", "Diamond", 0xffffff, 2, new Vector3(0,-1500,0), null, new Vector3(20,50,1)));
			}
			return oObj;
		 },
		CreateLight         : function(iX,iY,iZ, iIntensity, oObj)
		 {
			oObj = new PointLight(new Color(0xffffff));
			oObj.position.set(iX,iY,iZ);
			
			return oObj;
		 },
		CreateShadow        : function(iObjName, iDiameter, oObj)
		 {
			if(!iObjName) throw "WTF";

			oObj = new Mesh();
			{
				oObj.name     = iObjName;

				oObj.geometry = new PlaneGeometry(iDiameter, iDiameter);
				oObj.material = new MeshBasicMaterial( {map: ImageUtils.loadTexture(ImgDir + "shadow.png"), color : 0x000000, transparent : true, opacity : 1});
			}
			return oObj;
		 },
		
		CreateFrame         : function(iName, iSize, oObj)
		 {
			if(!iName) throw "WTF";

			var _VV = [];
			{
				for(var cX = -0.5; cX < +0.5; cX += 0.2)
				{
					for(var cY = -0.5; cY < +0.5; cY += 0.2)
					{
						for(var cZ = -0.5; cZ < +0.5; cZ += 0.2)
						{
							_VV.Add
							(
								cX, cY - 0.01, cZ,
								cX, cY + 0.01, cZ
							);
						}
					}
				}
			}

			return new Drafting.Line(iName, 0xffffff, 1, LinePieces, _VV, null,null,new Vector3(iSize,iSize,iSize));
		 },
		CreateScene         : function()
		 {
			//console.info("TODO: CreateXXX(AA) -> new XXX(AA)");
			var _Scene = gApp.Renderer.Scene;
			{
				if(gApp.Renderer.IsWebGL)
				{
					
					_Scene.fog = new Fog(0xffffff, 1, 15000);
				

					_Scene.add(CreateSkydome("Troposphere",  "tropo2.jpg",    150000, 12000, 1, true));
					_Scene.add(CreateSkydome("Stratosphere", "strato1.jpg",   200000, 17000, 1, false));

					_Scene.add(CreateLayer("Clouds",     new Vector3(5000,5000,1000), 100000, 0, 0xffffff, "clouds.png", 10));

					_Scene.add
					(
						CreateTerrain
						(
							".jpg", 512 * 106.25, 512 * 106.25,  81, 81,   0, 0, D090 - 0.002,
							[
								0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0, 
								0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0, 
								0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0, 
								0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0, 
								0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0, 
								0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0, 
								0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0, 
								0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0, 
								0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0, 

								0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0, 
								0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0, 
								0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0, 
								0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0, 
								0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0, 
								0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0, 
								0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0, 
								0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0, 
								0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0, 

								0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0, 
								0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0, 
								0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0, 
								0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0, 
								0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0, 
								0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0, 
								0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0, 
								0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0, 
								0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0, 

								0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0, 
								0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0, 
								0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0, 
								0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0, 
								0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0, 
								0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0, 
								0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0, 
								0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0, 
								0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0, 

								0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0, 
								0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0, 
								0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0, 
								0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0, 
								0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 1,1,1,1,1,1,1,1,1,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0, 
								0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0, 
								0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0, 
								0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0, 
								0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0, 

								0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0, 
								0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0, 
								0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0, 
								0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0, 
								0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0, 
								0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0, 
								0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0, 
								0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0, 
								0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0, 

								0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0, 
								0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0, 
								0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0, 
								0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0, 
								0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0, 
								0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0, 
								0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0, 
								0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0, 
								0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0, 

								0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0, 
								0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0, 
								0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0, 
								0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0, 
								0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0, 
								0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0, 
								0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0, 
								0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0, 
								0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0, 

								0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0, 
								0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0, 
								0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0, 
								0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0, 
								0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0, 
								0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0, 
								0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0, 
								0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0, 
								0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0, 
							]
						)
					);
					
					
					//_Scene.add(new AmbientLight(0x222222));

					_Scene.add(CreateLight(0, -100000, 30000, 1));
					_Scene.add(CreateShadow("VehicleShadow", 40));
				}
				else
				{
					_Scene.add(Drafting.Object("", "XSign", 0xffffff, 3, new Vector3(0,0,0), null, new Vector3(10,10,10)));

					_Scene.add(CreateRunway());

					_Scene.add(Drafting.Object("", "XSign", 0xff0000, 3, new Vector3(0,+3500,0), null, new Vector3(50,50,50)));
					_Scene.add(Drafting.Object("", "XSign", 0xff0000, 3, new Vector3(0,-3500,0), null, new Vector3(50,50,50)));


					//_Scene.add(Drafting.NEP(0, -14500, 4000,   500, 0xff0000));
					_Scene.add(Drafting.NEP(0, +14500, 4000,   500, 0xff0000));

					_Scene.add(Drafting.Line("", 0x00cc00, 3, LineStrip, VertexData.BuranPath88));


					
					_Scene.add(Drafting.Object("ShadowNG", "Cross2D", 0xffff00, 3));
					_Scene.add(Drafting.Object("ShadowLG", "Cross2D", 0xffff00, 3));
					_Scene.add(Drafting.Object("ShadowRG", "Cross2D", 0xffff00, 3));

					_Scene.add(CreateFrame("EnvFrame", 1000));

					//_Scene.add(CreateCylinder (-6000, +15000, 0,   6000, 15000,   10, 5, -1,   0xaaaaaa));
					//_Scene.add(CreateCylinder (+6000, +15000, 0,   6000, 15000,   10, 5, +1,   0xaaaaaa));
					//_Scene.add(CreateCylinder (+6000, -15000, 0,   6000, 15000,   10, 5, +1,   0xaaaaaa));
					//_Scene.add(CreateCylinder (-6000, -15000, 0,   6000, 15000,   10, 5, -1,   0xaaaaaa));
				}
			}
		 },
	 }
});



